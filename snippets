# ls
ls -lXB   #拡張子順
ls -lSr   #ファイルサイズ順
ls -ltcr  #更新順
ls -ltur  #アクセス順

# date
date +%s                             # UNIX時間
date -d "2012-9-12 16:32" +%s        # 日付→UNIX時間
date -d @1410624155 +"%Y/%m/%d %T"   # UNIX時間→日付

# zip, unzip
unzip -Z .zip
zipinfo .zip

# fileutil
find . -type f -print0 | xargs -0 ls -la | sort -nr -k5
du -b . | sort -nr
noglob zmv -W    # *.xxx *.yyy

# pager
less -S   # (または起動中に-Sr) 1行で表示する
less -R   # (または起動中に-Rr) ANSIカラーシーケンスを表示する
less +F   # (または起動中にF) tail -f モード

# traceroute
traceroute -T -p 80     # TCP
traceroute -U -p 53     # UDP
traceroute -I           # ICMP

# wget
wget -q --http-user= --http-password= http://

# curl
curl ifconfig.me         # リモートIP
curl ifconfig.me/host    # リモートホスト
curl 'http://' -H 'HTTP Header' --compressed -o filename -C -    # ヘッダ指定、レンジリクエストによるレジュームを有効

# git
git add 
git add .
git add -A 
git branch
git branch -d branch   # ブランチ削除
git commit
git commit -m
git commit --amend   # 直前のログを修正
git checkout
git checkout -b branch   # ブランチを作成して、切り替え
git checkout master
git checkout -- file   # 前回のコミットに戻す
git diff
git diff HEAD
git diff --staged   # stagingとHEADの差分
git init
git log
git log --graph --oneline --decorate --all
git log --pretty=format:"%h %ad %s" --date=short --all
git merge branch   # 今のブランチとbranchをマージ
git merge --no-ff
git push
git push -u origin master
git pull
git reset   # stagingのファイルを取り消し
git status -s
git stash
git stash list
git stash pop
git stash drop

# tcpdump/ngrep
tcpdump -i any -s0 -w _         # キャプチャ、ファイル保存
tcpdump -r _ port 80            # -wのデータを読み込み、80番ポートを出力
tcpdump -i any -nlx | tee _     # 標準出力&ファイル出力
tcpdump -i any -s0 -A port 80   # ASCIIで80番ポートを出力
ngrep -W byline -q port 80

# openssl
openssl pkcs12 -in foo.p12 -nocerts -nodes -out foo.key.pem   # PKCS12->秘密鍵
openssl pkcs12 -in foo.p12 -clcerts -nokeys -out foo.cert.pem # PKCS12->証明書

# Digest
openssl md5 file     # MD5
openssl sha1 file    # SHA1
md5sum file          # MD5
shasum -a 256 file   # SHA256

# abcde
abcde -o flac:"-8" -d /dev/disk3
abcde -o flac:"-8" -d /dev/disk4 1-4

# metaflac
metaflac --export-tags-to=- .flac
metaflac --set-tag=ARTIST="" --set-tag=ALBUM="" --set-tag=TITLE="" --set-tag=DATE= --set-tag=GENRE= --set-tag=TRACKNUMBER= .flac
metaflac --remove-tag= .flac
metaflac --export-picture-to=folder.jpg .flac
metaflac --import-picture-from=folder.jpg .flac

# netcat
echo "hello" | nc -u -w 0 localhost 5432                    # localhost:5432へUDP送信
dd if=/dev/urandom count=1024 | nc -u -w 0 localhost 5100   # 1024バイトのランダムデータを送信
nc -ul -w 0 5432                                            # 5432ポートでUDP待ち受け

# apt-get, dpkg
sudo apt-get install -y _  # パッケージのインストール
sudo apt-get update        # パッケージリストの更新
sudo apt-get upgrade       # パッケージの更新
sudo apt-get dist-upgrade  # ディストリの更新
dpkg -l                    # インストール済パッケージの一覧
dpkg -L _                  # インストール済パッケージのファイル一覧
apt-cache search _         # パッケージの検索
sudo apt-get remove _      # パッケージの削除
sudo apt-get autoremove    # 未使用パッケージを削除
sudo apt-get purge _       # パッケージ、設定ファイルを削除
sudo apt-get clean         # アーカイブファイルを削除
sudo apt-get autoclean     # 未使用パッケージのアーカイブファイルを削除

# pacman
pacman -S --noconfirm  # パッケージのインストール
pacman -Syy            # DBの更新
pacman -Syu            # 全パッケージのアップグレード
pacman -R              # 指定のパッケージのみ削除
pacman -Rs             # 指定のPKG＆依存PKGを削除(他PKGが使っている時は残す)
pacman -Ss             # パッケージを検索
pacman -Si             # パッケージの情報
pacman -Ql             # パッケージによってインストールされたファイルの一覧

# rpm
rpm -qa      # インストール済のパッケージ一覧
rpm -ql _    # パッケージの中身
rpm -qf _    # このファイルはどのパッケージのものか
rpm -qi _    # パッケージの概要
